((*- extends 'article.tplx' -*))

%===============================================================================
% Preamble
%===============================================================================

((* block docclass *))
    \documentclass{dlejeune_hw}
    \signaturefalse
((* endblock docclass *))

((* block commands *))
    \usepackage[margin=\dlejeunemargin,includehead]{geometry}
    \def\dlejeunefigurescale{0.5}

    \makeatletter
    \def\gnewcommand{\g@star@or@long\new@command}
    \def\grenewcommand{\g@star@or@long\renew@command}
    \def\g@star@or@long#1{%
      \@ifstar{\let\l@ngrel@x\global#1}{\def\l@ngrel@x{\long\global}#1}}
    \makeatother

((* endblock commands *))

%===============================================================================
% Metadata
%===============================================================================

% Author and Title from metadata
((* block maketitle *))

((*- if nb.metadata["latex_metadata"] -*))

((*- if nb.metadata["latex_metadata"]["author"] -*))
    \author{((( nb.metadata["latex_metadata"]["author"] )))}
((*- else -*))
    \author{John Doe}
((*- endif -*))

((*- if nb.metadata["latex_metadata"]["VARname"] -*))
    \def\VARname{((( nb.metadata["latex_metadata"]["VARname"] )))}
((*- else -*))
    \def\VARname{John Doe (123-45-6789)}
((*- endif -*))

((*- if nb.metadata["latex_metadata"]["VARclass"] -*))
    \def\VARclass{((( nb.metadata["latex_metadata"]["VARclass"] )))}
((*- else -*))
    \def\VARclass{LIFE 101}
((*- endif -*))

((*- if nb.metadata["latex_metadata"]["VARassignment"] -*))
    \def\VARassignment{((( nb.metadata["latex_metadata"]["VARassignment"] )))}
((*- else -*))
    \def\VARassignment{HW \# 1}
((*- endif -*))

((*- if nb.metadata["latex_metadata"]["VARdue"] -*))
    \def\VARdue{((( nb.metadata["latex_metadata"]["VARdue"] )))}
((*- else -*))
    \def\VARdue{\today}
((*- endif -*))

((*- if nb.metadata["latex_metadata"]["title"] -*))
    \title{((( nb.metadata["latex_metadata"]["title"] )))}
((* elif (nb.metadata["latex_metadata"]["VARclass"] and nb.metadata["latex_metadata"]["VARassignment"]) *))
    \title{((( nb.metadata["latex_metadata"]["VARclass"] ))) -- ((( nb.metadata["latex_metadata"]["VARassignment"] )))}
((*- else -*))
    \title{((( resources.metadata.name )))}
((*- endif -*))

((*- endif -*))

\date{\today}
\maketitle
((* endblock maketitle *))

%===============================================================================
% Hidden cells
%===============================================================================

((* block any_cell *))
((*- if cell.metadata.hide_output -*))
((*- else -*))
    ((( super() )))
((*- endif -*))
((* endblock any_cell *))

%===============================================================================
% Markdown cells
%===============================================================================

((* block markdowncell *))
    \setlength{\parindent}{0mm}
    \setlength{\parskip}{3mm}
    \setlength{\abovedisplayskip}{-0.5em} % compensate for nbconvert markdown paragraphs
    \setlength{\belowdisplayskip}{0.5em}
    \setlength{\abovedisplayshortskip}{\abovedisplayskip}
    \setlength{\belowdisplayshortskip}{\belowdisplayskip}
    ((( super() )))
((* endblock markdowncell *))

%===============================================================================
$ Figures
%===============================================================================

((*- block data_png -*))((( custom_draw_figure(output.metadata.filenames['image/png'], cell.metadata.figurescale) )))((*- endblock -*))
((*- block data_jpg -*))((( custom_draw_figure(output.metadata.filenames['image/jpeg'], cell.metadata.figurescale) )))((*- endblock -*))
((*- block data_svg -*))((( custom_draw_figure(output.metadata.filenames['image/svg+xml'], cell.metadata.figurescale) )))((*- endblock -*))
((*- block data_pdf -*))((( custom_draw_figure(output.metadata.filenames['application/pdf'], cell.metadata.figurescale) )))((*- endblock -*))

% Draw a figure using the graphicx package.
((* macro custom_draw_figure(filename, figurescale) -*))
((* set filename = filename | posix_path *))
((*- block figure scoped -*))
    \begin{center}
((*- if figurescale -*))
    \adjustimage{max size={((( figurescale )))\linewidth}{((( figurescale )))\paperheight}}{((( filename )))}
((*- else -*))
    \adjustimage{max size={\dlejeunefigurescale\linewidth}{\dlejeunefigurescale\paperheight}}{((( filename )))}
((*- endif -*))
    \end{center}
    %{ \hspace*{\fill} \\}
((*- endblock figure -*))
((*- endmacro -*))

%===============================================================================
%===============================================================================
% BEGIN FROM http://www.markus-beuckelmann.de/blog/customizing-nbconvert-pdf.html
%===============================================================================
%===============================================================================

%===============================================================================
% Input
%===============================================================================

((* block input scoped *))
   ((( custom_add_prompt(cell.source | wrap_text(120) | highlight_code(strip_verbatim=True), cell, 'In ', 'incolor') )))
((* endblock input *))

%===============================================================================
% Output
%===============================================================================

% Display stream ouput with coloring
((* block stream *))
((*- if cell.metadata.hide_stream -*))
((*- else -*))
    \begin{Verbatim}[commandchars=\\\{\},fontsize=\footnotesize]
((( output.text | wrap_text(128) | escape_latex | ansi2latex )))
    \end{Verbatim}
((*- endif -*))
((* endblock stream *))

((* block execute_result scoped *))
    ((*- for type in output.data | filter_data_type -*))
        ((*- if resources.global_content_filter.include_output_prompt -*))
            ((*- if type in ['text/plain'] *))
((( custom_add_prompt(output.data['text/plain'] | wrap_text(120) | escape_latex, cell, 'Out ', 'outcolor') )))
            ((* else -*))
\texttt{\color{outcolor}Out[{\color{outcolor}((( cell.execution_count )))}]:}((( super() )))
            ((*- endif -*))
        ((*- endif -*))
    ((*- endfor -*))
((* endblock execute_result *))

%==============================================================================
% Define macro custom_add_prompt() (derived from add_prompt() macro in style_ipython.tplx)
%==============================================================================

((* macro custom_add_prompt(text, cell, prompt, prompt_color) -*))
    ((*- if cell.execution_count is defined -*))
    ((*- set execution_count = "" ~ (cell.execution_count | replace(None, " ")) -*))
    ((*- else -*))
    ((*- set execution_count = " " -*))
    ((*- endif -*))
    ((*- set indention =  " " * (execution_count | length + 7) -*))
\begin{Verbatim}[commandchars=\\\{\},fontsize=\footnotesize]
((( text | add_prompts(first='{\color{' ~ prompt_color ~ '}' ~ prompt ~ '[{\\color{' ~ prompt_color ~ '}' ~ execution_count ~ '}]:} ', cont=indention) )))
\end{Verbatim}
((*- endmacro *))

%===============================================================================
%===============================================================================
% END FROM http://www.markus-beuckelmann.de/blog/customizing-nbconvert-pdf.html
%===============================================================================
%===============================================================================

%===============================================================================
% Bibliography
%===============================================================================

((*- if nb.metadata["latex_metadata"] -*))
((*- if nb.metadata["latex_metadata"]["bibliography"] -*))

((* block bibliography *))
\bibliographystyle{plain}
\bibliography{((( nb.metadata["latex_metadata"]["bibliography"] )))}
((* endblock bibliography *))

((*- endif -*))
((*- endif -*))
